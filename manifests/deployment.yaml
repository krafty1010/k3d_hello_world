apiVersion: v1
kind: Namespace
metadata:
  name: corprime
  labels:
    name: corprime
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: corprime-app
  namespace: corprime
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: corprime-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: corprime-app
    spec:
      containers:
      - name: corprime-app
        image: myapp:local
        imagePullPolicy: Never #required for local image using k3d
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: corprime-service
  namespace: corprime
spec:
  type: ClusterIP #not using loadbalancer as it is not supported in k3d
  selector:
    app.kubernetes.io/name: corprime-app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: corprime
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-allpods-to-dns
  namespace: corprime
spec:
  policyTypes:
  - Egress
  podSelector: {}
  egress:
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - port: 53
      protocol: TCP
    - port: 53
      protocol: UDP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-allpods-to-service
  namespace: corprime
spec:
  policyTypes:
  - Ingress
  - Egress
  podSelector: {}
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: corprime
      podSelector:
        matchLabels:
          app.kubernetes.io/name: corprime-app
    ports:
    - port: 8080
      protocol: TCP
  ingress:
  - from:
    - podSelector: {}
    ports:
    - port: 8080
      protocol: TCP
